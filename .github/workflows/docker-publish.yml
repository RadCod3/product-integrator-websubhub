name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'The release version to build the Docker image for'
        required: true
      component_name:
        description: 'The component name to build Docker image for'
        required: true
        options:
          - websubhub
          - websubhub-consolidator

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    if: github.repository_owner == 'wso2'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: v${{ github.event.inputs.release_version }}

      - name: Get Ballerina Version
        run: |
          BAL_VERSION=$(grep -w 'ballerinaDistributionVersion' gradle.properties | cut -d= -f2 | rev | cut --complement -d- -f1 | rev)
          if [ -z "$BAL_VERSION" ]; then
            BAL_VERSION="latest"
          fi
          echo "BAL_VERSION=$BAL_VERSION" >> $GITHUB_ENV
          echo "Ballerina Version: $BAL_VERSION"

      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.3
        with:
          version: ${{ env.BAL_VERSION }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21

      - name: Build the Package
        run: |
          ./gradlew clean build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate Component
        run: |
          if [ ! -f "docker/components/${{ github.event.inputs.component_name }}/Dockerfile" ]; then
            echo "Error: Dockerfile not found for component ${{ github.event.inputs.component_name }}"
            exit 1
          fi
          echo "Building Docker image for: ${{ github.event.inputs.component_name }}"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/components/${{ github.event.inputs.component_name }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.component_name }}:${{ github.event.inputs.release_version }}
          build-args: |
            SERVER_NAME=${{ github.event.inputs.component_name }}
            SERVER_VERSION=${{ github.event.inputs.release_version }}
            SERVER_DIST_PATH=distribution/build/distributions
            BALLERINA_VERSION=${{ env.BAL_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
